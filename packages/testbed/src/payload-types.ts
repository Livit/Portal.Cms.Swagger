/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    categories: Category;
    media: Media;
    posts: Post;
    pages: Page;
    users: User;
    alerts: Alert;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    mainMenu: MainMenu;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name?: string | null;
  archived?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    portrait?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    hero?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title?: string | null;
  category?: (string | Category)[] | null;
  layout?:
    | (
        | {
            columns?:
              | {
                  width: 'oneThird' | 'half' | 'twoThirds' | 'full';
                  alignment: 'left' | 'center' | 'right';
                  richText?:
                    | {
                        [k: string]: unknown;
                      }[]
                    | null;
                  links?:
                    | {
                        link: {
                          type?: ('reference' | 'custom') | null;
                          label: string;
                          reference?:
                            | ({
                                relationTo: 'pages';
                                value: string | Page;
                              } | null)
                            | ({
                                relationTo: 'posts';
                                value: string | Post;
                              } | null);
                          url?: string | null;
                          newTab?: boolean | null;
                        };
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'content';
          }
        | MediaBlock
        | {
            alignment: 'contentOnLeft' | 'contentOnRight';
            richText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            media?: string | Media | null;
            embeddedVideo?: {
              embed?: boolean | null;
              poster?: string | Media | null;
              platform?: ('youtube' | 'vimeo') | null;
              videoID?: string | null;
              aspectRatio?: ('56.25' | '75') | null;
            };
            links?:
              | {
                  link: {
                    appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
                    type?: ('reference' | 'custom') | null;
                    label: string;
                    reference?:
                      | ({
                          relationTo: 'pages';
                          value: string | Page;
                        } | null)
                      | ({
                          relationTo: 'posts';
                          value: string | Post;
                        } | null);
                    url?: string | null;
                    newTab?: boolean | null;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaContent';
          }
        | {
            richText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            slides?:
              | {
                  media: string | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaSlider';
          }
      )[]
    | null;
  author?: (string | null) | User;
  publishDate?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type:
      | 'basic'
      | 'content'
      | 'contentMedia'
      | 'contentSidebar'
      | 'quickNav'
      | 'fullscreenBackground'
      | 'fullscreenSlider';
    basic?: {
      richText?:
        | {
            [k: string]: unknown;
          }[]
        | null;
      links?:
        | {
            link: {
              appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
              type?: ('reference' | 'custom') | null;
              label: string;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              newTab?: boolean | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    content?: {
      richText?:
        | {
            [k: string]: unknown;
          }[]
        | null;
      links?:
        | {
            link: {
              appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
              type?: ('reference' | 'custom') | null;
              label: string;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              newTab?: boolean | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    contentMedia?: {
      richText?:
        | {
            [k: string]: unknown;
          }[]
        | null;
      links?:
        | {
            link: {
              appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
              type?: ('reference' | 'custom') | null;
              label: string;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              newTab?: boolean | null;
            };
            id?: string | null;
          }[]
        | null;
      media?: string | Media | null;
      embeddedVideo?: {
        embed?: boolean | null;
        poster?: string | Media | null;
        platform?: ('youtube' | 'vimeo') | null;
        videoID?: string | null;
        aspectRatio?: ('56.25' | '75') | null;
      };
    };
    contentSidebar?: {
      mainContent?:
        | {
            [k: string]: unknown;
          }[]
        | null;
      links?:
        | {
            link: {
              appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
              type?: ('reference' | 'custom') | null;
              label: string;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              newTab?: boolean | null;
            };
            id?: string | null;
          }[]
        | null;
      richText?:
        | {
            [k: string]: unknown;
          }[]
        | null;
    };
    fullscreenBackground?: {
      backgroundMedia: string | Media;
      richText?:
        | {
            [k: string]: unknown;
          }[]
        | null;
      links?:
        | {
            link: {
              appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
              type?: ('reference' | 'custom') | null;
              label: string;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              newTab?: boolean | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    quickNav?: {
      backgroundMedia: string | Media;
      richText?:
        | {
            [k: string]: unknown;
          }[]
        | null;
      links?:
        | {
            link: {
              appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
              type?: ('reference' | 'custom') | null;
              label: string;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              newTab?: boolean | null;
            };
            id?: string | null;
          }[]
        | null;
      columns?:
        | {
            heading: string;
            description: string;
            link?: {
              type?: ('reference' | 'custom') | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              newTab?: boolean | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    fullscreenSlider?: {
      useStaticContent?: boolean | null;
      richText?:
        | {
            [k: string]: unknown;
          }[]
        | null;
      links?:
        | {
            link: {
              appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
              type?: ('reference' | 'custom') | null;
              label: string;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              newTab?: boolean | null;
            };
            id?: string | null;
          }[]
        | null;
      slides?:
        | {
            backgroundMedia: string | Media;
            richText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            links?:
              | {
                  link: {
                    appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
                    type?: ('reference' | 'custom') | null;
                    label: string;
                    reference?:
                      | ({
                          relationTo: 'pages';
                          value: string | Page;
                        } | null)
                      | ({
                          relationTo: 'posts';
                          value: string | Post;
                        } | null);
                    url?: string | null;
                    newTab?: boolean | null;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
          }[]
        | null;
    };
  };
  layout?:
    | (
        | {
            appearance?: ('default' | 'condensed') | null;
            sections?:
              | {
                  label: string;
                  openOnInit?: boolean | null;
                  columns?:
                    | {
                        width: 'oneThird' | 'half' | 'twoThirds' | 'full';
                        alignment: 'left' | 'center' | 'right';
                        richText?:
                          | {
                              [k: string]: unknown;
                            }[]
                          | null;
                        links?:
                          | {
                              link: {
                                type?: ('reference' | 'custom') | null;
                                label: string;
                                reference?:
                                  | ({
                                      relationTo: 'pages';
                                      value: string | Page;
                                    } | null)
                                  | ({
                                      relationTo: 'posts';
                                      value: string | Post;
                                    } | null);
                                url?: string | null;
                                newTab?: boolean | null;
                              };
                              id?: string | null;
                            }[]
                          | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'accordion';
          }
        | {
            columns?:
              | {
                  width: 'oneThird' | 'half' | 'twoThirds' | 'full';
                  alignment: 'left' | 'center' | 'right';
                  richText?:
                    | {
                        [k: string]: unknown;
                      }[]
                    | null;
                  links?:
                    | {
                        link: {
                          type?: ('reference' | 'custom') | null;
                          label: string;
                          reference?:
                            | ({
                                relationTo: 'pages';
                                value: string | Page;
                              } | null)
                            | ({
                                relationTo: 'posts';
                                value: string | Post;
                              } | null);
                          url?: string | null;
                          newTab?: boolean | null;
                        };
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'content';
          }
        | {
            richText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            form: string | Form;
            id?: string | null;
            blockName?: string | null;
            blockType: 'embeddedForm';
          }
        | MediaBlock
        | {
            alignment: 'contentOnLeft' | 'contentOnRight';
            richText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            media?: string | Media | null;
            embeddedVideo?: {
              embed?: boolean | null;
              poster?: string | Media | null;
              platform?: ('youtube' | 'vimeo') | null;
              videoID?: string | null;
              aspectRatio?: ('56.25' | '75') | null;
            };
            links?:
              | {
                  link: {
                    appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
                    type?: ('reference' | 'custom') | null;
                    label: string;
                    reference?:
                      | ({
                          relationTo: 'pages';
                          value: string | Page;
                        } | null)
                      | ({
                          relationTo: 'posts';
                          value: string | Post;
                        } | null);
                    url?: string | null;
                    newTab?: boolean | null;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaContent';
          }
        | {
            richText?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            slides?:
              | {
                  media: string | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaSlider';
          }
      )[]
    | null;
  fullTitle?: string | null;
  breadcrumbs?:
    | {
        doc?: (string | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  parent?: (string | null) | Page;
  author?: (string | null) | User;
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  redirect?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?:
          | {
              [k: string]: unknown;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  useVimeo?: boolean | null;
  vimeoID?: string | null;
  aspectRatio?: ('56.25' | '75') | null;
  size?: ('normal' | 'wide' | 'fullscreen') | null;
  caption?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'media';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  roles?: ('admin' | 'reader')[] | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "alerts".
 */
export interface Alert {
  id: string;
  name?: string | null;
  placement: 'global' | 'documents';
  documents?:
    | {
        relationTo: 'pages';
        value: string | Page;
      }[]
    | null;
  backgroundColor?: ('matchTheme' | 'green' | 'blue' | 'red' | 'purple') | null;
  content: {
    [k: string]: unknown;
  }[];
  links?:
    | {
        link: {
          appearance?: ('text' | 'primaryButton' | 'secondaryButton') | null;
          type?: ('reference' | 'custom') | null;
          label: string;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          newTab?: boolean | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mainMenu".
 */
export interface MainMenu {
  id: string;
  items?:
    | {
        type?: ('link' | 'subMenu') | null;
        label: string;
        subMenu?: {
          blocks?:
            | (
                | {
                    title: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'menuTitle';
                  }
                | {
                    appearance?: ('primary' | 'secondary' | 'arrow') | null;
                    link: {
                      type?: ('reference' | 'custom') | null;
                      label: string;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null);
                      url?: string | null;
                      newTab?: boolean | null;
                    };
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'menuLink';
                  }
                | {
                    content: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'menuDescription';
                  }
                | {
                    menuFeatureMedia: string | Media;
                    headline: string;
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null);
                      url?: string | null;
                      newTab?: boolean | null;
                    };
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'menuFeature';
                  }
              )[]
            | null;
        };
        link?: {
          type?: ('reference' | 'custom') | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          newTab?: boolean | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}